rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Campaigns collection rules
    match /campaigns/{campaignId} {
      // Anyone can read campaigns
      allow read: if true;
      
      // Allow creation if user is authenticated and sets themselves as owner
      allow create: if request.auth != null && 
                   request.resource.data.userId == request.auth.uid;
      
      // Allow updates if user is authenticated and either:
      // 1. Is the owner of the campaign
      // 2. Is updating donation-related fields (for donation processing)
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        (
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['raisedAmount', 'donationsCount', 'progressPercentage', 'recentDonors', 'lastUpdated', 'lastUpdatedBy'])
        )
      );
                   
      // Allow deletion if user is authenticated and is the owner
      allow delete: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
    }

    // Donations collection rules
    match /donations/{donationId} {
      // Anyone can read donations
      allow read: if true;
      
      // Allow creation if user is authenticated
      allow create: if request.auth != null;
      
      // Allow updates if user is authenticated and is the donor
      allow update, delete: if request.auth != null && 
                           resource.data.donorId == request.auth.uid;
    }
  }
}